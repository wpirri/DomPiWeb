https://jorgegarciadev.gitlab.io/post/raspberry_pi_en_qemu/

QEMU

apt install bridge-utils qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst


Kernel: https://github.com/dhruvvyas90/qemu-rpi-kernel

qemu-system-arm -kernel kernel-qemu-4.4.34-jessie -cpu arm1176 -m 256M -M versatilepb -serial stdio -append “root=/dev/sda2 rootfstype=ext4 rw” -hda 2017-11-29-raspbian-stretch-lite.img -redir tcp:5022::22 -no-reboot






https://spad.uk/really-simple-network-bridging-with-qemu/

allow virtbr0 -> /etc/qemu/bridge.conf

apt install bridge-utils

brctl addbr virtbr0
brctl addif virtbr0 enp0s3
ip addr add 192.168.10.32/24 dev virtbr0
ip link set virtbr0 up


iptables -I FORWARD -m physdev --physdev-is-bridged -j ACCEPT
iptables -I FORWARD -m enp0s3 --physdev-is-bridged -j ACCEPT


en /lib/systemd/system//lib/systemd/system/

[Unit]
Description=Setup qemu network bridging
After=network-online.target

[Service]
Type=oneshot
Restart=on-failure
ExecStart=brctl addbr virtbr0
ExecStart=brctl addif virtbr0 enp3s0
ExecStart=ip addr add 192.168.0.20/24 dev virtbr0
ExecStart=ip link set virtbr0 up
ExecStart=iptables -I FORWARD -m physdev --physdev-is-bridged -j ACCEPT

[Install]
WantedBy=multi-user.target 





-net nic,model=virtio,macaddr=52:54:00:00:00:01 -net bridge,br=virtbr0





============================================================

Con libvirt

Levantar
virsh net-start default
Poner en auto
virsh net-autostart default


ver
ip addr show virbr0


virsh net-destroy default
virsh net-start default

virsh net-edit default

-netdev bridge,id=hn0,br=virbr0

-device virtio-net-pci,netdev=hn0,id=nic1


https://beroal.livejournal.com/81163.html




===============================================================================
Native emulation of Rpi2/3 using Qemu's Raspi2/3 machine

https://github.com/dhruvvyas90/qemu-rpi-kernel/tree/master/native-emulation

Permite usar 1G de RAM

Step by step guide to extract dtb files and kernel image from img file
Mount the image file

sudo mkdir /mnt/rpi
sudo losetup -f --show -P <path-to-rpi-image-file>
sudo mount /dev/loop<no>p01 /mnt/rpi
Copy kernel files / dtb files

cp /mnt/rpi/kernel* .
cp /mnt/rpi/*.dtb .
Unmount the image file

sudo umount /mnt/rpi
sudo losetup -d /dev/loop<no>
Command to emulate
sudo qemu-system-aarch64 -M raspi3b -append "rw earlyprintk loglevel=8 console=ttyAMA0,115200 dwc_otg.lpm_enable=0 root=/dev/mmcblk0p2 rootdelay=1" -dtb ./dtbs/bcm2710-rpi-3-b-plus.dtb -sd 2020-08-20-raspios-buster-armhf-full.img -kernel kernel8.img -m 1G -smp 4 -serial stdio -usb -device usb-mouse -device usb-kbd